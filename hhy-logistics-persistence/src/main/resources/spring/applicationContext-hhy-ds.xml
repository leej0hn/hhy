<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
		
		
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 
		<context:component-scan base-package="com.permission2.persistence.service" />
	-->
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<property name="driverClassName" value="#{jdbcConfig.driverClass}" />
	    <property name="url" value="#{jdbcConfig.jdbcUrl}" />
	    <property name="username" value="#{jdbcConfig.user}" />
	    <property name="password" value="#{jdbcConfig.password}" />
	
        <property name="initialSize" value="#{jdbcConfig.initialSize}" />
        <property name="minIdle" value="#{jdbcConfig.minIdle}" /> 
        <property name="maxActive" value="#{jdbcConfig.maxWait}" />
	
	    <property name="maxWait" value="#{jdbcConfig.maxWait}" />
	    <property name="timeBetweenEvictionRunsMillis" value="#{jdbcConfig.timeBetweenEvictionRunsMillis}" />
	    <property name="minEvictableIdleTimeMillis" value="#{jdbcConfig.minEvictableIdleTimeMillis}" />
	
	    <property name="validationQuery" value="#{jdbcConfig.validationQuery}" />
	    <property name="testWhileIdle" value="#{jdbcConfig.testWhileIdle}" />
	    <property name="testOnBorrow" value="#{jdbcConfig.testOnBorrow}" />
	    <property name="testOnReturn" value="#{jdbcConfig.testOnReturn}" />
	
	    <property name="poolPreparedStatements" value="#{jdbcConfig.poolPreparedStatements}" />
	
	    <property name="filters" value="#{jdbcConfig.filters}" />
	</bean>
 
</beans>